FROM registry.haier.net/library/golang:1.13.5-alpine3.10 as build-env

# git
RUN apk update
RUN apk add --no-cache git ca-certificates

RUN pwd
RUN ls -l ./src

# move to GOPATH
RUN mkdir -p /app
WORKDIR /app

# go mod
ENV GOPRIVATE=git.haier.net
#ENV GONOPROXY=github.com/drone/*
ENV GOPROXY=https://goproxy.io,direct
COPY go.mod .
COPY go.sum .
RUN go mod download

# build
COPY . .
ENV CGO_ENABLED=0
#ENV GOROOT=/go/src
RUN mkdir -p release/linux/amd64
RUN go build -tags "nolimit" -o release/linux/amd64/drone-server /app/cmd/drone-server

## docker image stage
FROM registry.haier.net/library/alpine:3.10

EXPOSE 80 443
VOLUME /data

RUN echo 'hosts: files dns' > /etc/nsswitch.conf

ENV GODEBUG netdns=go
ENV XDG_CACHE_HOME /data
ENV DRONE_DATABASE_DRIVER sqlite3
ENV DRONE_DATABASE_DATASOURCE /data/database.sqlite
ENV DRONE_RUNNER_OS=linux
ENV DRONE_RUNNER_ARCH=amd64
ENV DRONE_SERVER_PORT=:80
ENV DRONE_SERVER_HOST=localhost

#RUN cp /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/

COPY --from=build-env /app/release/linux/amd64/drone-server /bin/
ENTRYPOINT ["/bin/drone-server"]
